/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */







declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
}

export interface NexusGenEnums {
  UserRole: "ADMIN" | "USER"
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
}

export interface NexusGenObjects {
  AuthType: { // root type
    token: string; // String!
    user: NexusGenRootTypes['User']; // User!
  }
  Brand: { // root type
    id: number; // Int!
    name: string; // String!
  }
  BuyCartResponse: { // root type
    message?: string | null; // String
    success?: boolean | null; // Boolean
  }
  Cart: { // root type
    creatorId?: number | null; // Int
    id?: number | null; // Int
    productId?: number | null; // Int
  }
  Category: { // root type
    id: number; // Int!
    name: string; // String!
  }
  Mutation: {};
  Order: { // root type
    id: number; // Int!
    status: string; // String!
  }
  OrderItem: { // root type
    id?: number | null; // Int
    productId?: number | null; // Int
    quantity?: number | null; // Int
    subtotal?: number | null; // Float
    unit_price?: number | null; // Float
  }
  Product: { // root type
    available: boolean; // Boolean!
    brandId: number; // Int!
    categoryId: number; // Int!
    creatorId: number; // Int!
    description: string; // String!
    id: number; // Int!
    name: string; // String!
    price: number; // Float!
  }
  ProductImage: { // root type
    id?: number | null; // Int
    key?: string | null; // String
    productId?: number | null; // Int
  }
  Query: {};
  Review: { // root type
    createdAt: string; // String!
    id: number; // Int!
    rating: number; // Int!
    review_text: string; // String!
    title: string; // String!
  }
  User: { // root type
    address?: string | null; // String
    email: string; // String!
    first_name?: string | null; // String
    id: number; // Int!
    last_name?: string | null; // String
    phone_number?: string | null; // String
    role: NexusGenEnums['UserRole']; // UserRole!
    username: string; // String!
  }
  Wishlist: { // root type
    id: number; // Int!
    product: NexusGenRootTypes['Product']; // Product!
  }
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars & NexusGenEnums

export interface NexusGenFieldTypes {
  AuthType: { // field return type
    token: string; // String!
    user: NexusGenRootTypes['User']; // User!
  }
  Brand: { // field return type
    id: number; // Int!
    name: string; // String!
  }
  BuyCartResponse: { // field return type
    message: string | null; // String
    success: boolean | null; // Boolean
  }
  Cart: { // field return type
    creatorId: number | null; // Int
    id: number | null; // Int
    productId: number | null; // Int
  }
  Category: { // field return type
    id: number; // Int!
    name: string; // String!
  }
  Mutation: { // field return type
    addReview: NexusGenRootTypes['Review']; // Review!
    addToCart: NexusGenRootTypes['Cart']; // Cart!
    addToWishlist: NexusGenRootTypes['Wishlist']; // Wishlist!
    buyCart: NexusGenRootTypes['BuyCartResponse'] | null; // BuyCartResponse
    createBrand: NexusGenRootTypes['Brand']; // Brand!
    createProduct: NexusGenRootTypes['Product']; // Product!
    deleteReview: NexusGenRootTypes['Review']; // Review!
    login: NexusGenRootTypes['AuthType']; // AuthType!
    register: NexusGenRootTypes['AuthType']; // AuthType!
    removeFromCart: NexusGenRootTypes['Cart']; // Cart!
    removeFromWishlist: boolean; // Boolean!
  }
  Order: { // field return type
    id: number; // Int!
    status: string; // String!
  }
  OrderItem: { // field return type
    id: number | null; // Int
    productId: number | null; // Int
    quantity: number | null; // Int
    subtotal: number | null; // Float
    unit_price: number | null; // Float
  }
  Product: { // field return type
    ImageDetail: NexusGenRootTypes['ProductImage'][]; // [ProductImage!]!
    available: boolean; // Boolean!
    brandId: number; // Int!
    categoryId: number; // Int!
    createdBy: NexusGenRootTypes['User'] | null; // User
    creatorId: number; // Int!
    description: string; // String!
    id: number; // Int!
    name: string; // String!
    price: number; // Float!
  }
  ProductImage: { // field return type
    id: number | null; // Int
    key: string | null; // String
    productId: number | null; // Int
  }
  Query: { // field return type
    Review: NexusGenRootTypes['Review'][]; // [Review!]!
    Wishlist: NexusGenRootTypes['Wishlist'][]; // [Wishlist!]!
    fetchCart: Array<NexusGenRootTypes['Cart'] | null>; // [Cart]!
    fetchOrderItems: Array<Array<NexusGenRootTypes['OrderItem'] | null> | null> | null; // [[OrderItem]]
    fetchProduct: NexusGenRootTypes['Product'][]; // [Product!]!
    fetchProductByBrand: NexusGenRootTypes['Product'][]; // [Product!]!
    fetchProductByCategory: NexusGenRootTypes['Product'][]; // [Product!]!
    orderData: Array<NexusGenRootTypes['Order'] | null>; // [Order]!
    products: NexusGenRootTypes['Product'][]; // [Product!]!
    userData: NexusGenRootTypes['User']; // User!
  }
  Review: { // field return type
    createdAt: string; // String!
    id: number; // Int!
    rating: number; // Int!
    review_text: string; // String!
    title: string; // String!
  }
  User: { // field return type
    address: string | null; // String
    email: string; // String!
    first_name: string | null; // String
    id: number; // Int!
    last_name: string | null; // String
    phone_number: string | null; // String
    role: NexusGenEnums['UserRole']; // UserRole!
    username: string; // String!
  }
  Wishlist: { // field return type
    id: number; // Int!
    product: NexusGenRootTypes['Product']; // Product!
  }
}

export interface NexusGenFieldTypeNames {
  AuthType: { // field return type name
    token: 'String'
    user: 'User'
  }
  Brand: { // field return type name
    id: 'Int'
    name: 'String'
  }
  BuyCartResponse: { // field return type name
    message: 'String'
    success: 'Boolean'
  }
  Cart: { // field return type name
    creatorId: 'Int'
    id: 'Int'
    productId: 'Int'
  }
  Category: { // field return type name
    id: 'Int'
    name: 'String'
  }
  Mutation: { // field return type name
    addReview: 'Review'
    addToCart: 'Cart'
    addToWishlist: 'Wishlist'
    buyCart: 'BuyCartResponse'
    createBrand: 'Brand'
    createProduct: 'Product'
    deleteReview: 'Review'
    login: 'AuthType'
    register: 'AuthType'
    removeFromCart: 'Cart'
    removeFromWishlist: 'Boolean'
  }
  Order: { // field return type name
    id: 'Int'
    status: 'String'
  }
  OrderItem: { // field return type name
    id: 'Int'
    productId: 'Int'
    quantity: 'Int'
    subtotal: 'Float'
    unit_price: 'Float'
  }
  Product: { // field return type name
    ImageDetail: 'ProductImage'
    available: 'Boolean'
    brandId: 'Int'
    categoryId: 'Int'
    createdBy: 'User'
    creatorId: 'Int'
    description: 'String'
    id: 'Int'
    name: 'String'
    price: 'Float'
  }
  ProductImage: { // field return type name
    id: 'Int'
    key: 'String'
    productId: 'Int'
  }
  Query: { // field return type name
    Review: 'Review'
    Wishlist: 'Wishlist'
    fetchCart: 'Cart'
    fetchOrderItems: 'OrderItem'
    fetchProduct: 'Product'
    fetchProductByBrand: 'Product'
    fetchProductByCategory: 'Product'
    orderData: 'Order'
    products: 'Product'
    userData: 'User'
  }
  Review: { // field return type name
    createdAt: 'String'
    id: 'Int'
    rating: 'Int'
    review_text: 'String'
    title: 'String'
  }
  User: { // field return type name
    address: 'String'
    email: 'String'
    first_name: 'String'
    id: 'Int'
    last_name: 'String'
    phone_number: 'String'
    role: 'UserRole'
    username: 'String'
  }
  Wishlist: { // field return type name
    id: 'Int'
    product: 'Product'
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    addReview: { // args
      productId: number; // Int!
      rating: number; // Int!
      review_text: string; // String!
      title: string; // String!
    }
    addToCart: { // args
      creatorId: number; // Int!
      productId: number; // Int!
    }
    addToWishlist: { // args
      productId: number; // Int!
    }
    createBrand: { // args
      name: string; // String!
    }
    createProduct: { // args
      available: boolean; // Boolean!
      brandId: number; // Int!
      categoryId: number; // Int!
      description: string; // String!
      name: string; // String!
      price: number; // Float!
    }
    deleteReview: { // args
      reviewId: number; // Int!
    }
    login: { // args
      password: string; // String!
      username: string; // String!
    }
    register: { // args
      email: string; // String!
      password: string; // String!
      username: string; // String!
    }
    removeFromCart: { // args
      productId: number; // Int!
    }
    removeFromWishlist: { // args
      productId: number; // Int!
    }
  }
  Query: {
    Review: { // args
      productId: number; // Int!
    }
    fetchProduct: { // args
      productId?: number | null; // Int
    }
    fetchProductByBrand: { // args
      brandId: number; // Int!
    }
    fetchProductByCategory: { // args
      categoryId: number; // Int!
    }
    products: { // args
      searchKeyword?: string | null; // String
    }
    userData: { // args
      userId: number; // Int!
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = never;

export type NexusGenEnumNames = keyof NexusGenEnums;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}